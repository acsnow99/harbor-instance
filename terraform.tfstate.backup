{
  "version": 4,
  "terraform_version": "0.12.2",
  "serial": 233,
  "lineage": "46828009-a358-75de-abff-cc97536648b3",
  "outputs": {
    "instance-ip": {
      "value": "35.185.203.160",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.harbor-instance",
      "mode": "data",
      "type": "template_file",
      "name": "install-command-ip",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "b3793fbacbd97d97bf8db9912b25f736a8db672993241cf3dbc766ad45476209",
            "rendered": "sudo apt-get update -y\nsudo apt-get install -y chrony dnsmasq dnsutils jq\nsudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt-get update -y\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\nsudo docker run hello-world\n# install docker compose\nsudo curl -L --fail https://github.com/docker/compose/releases/download/1.24.0/run.sh -o /usr/local/bin/docker-compose\n# executable permissions for compose\nsudo chmod +x /usr/local/bin/docker-compose\n\nopenssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 3650 -out ca.crt -subj \"/C=US/ST=Oregon/L=Portland/0=IGNW/OU=Devops/CN=.\"\nopenssl req -newkey rsa:4096 -nodes -sha256 -keyout harbor.gcp.key -out harbor.gcp.csr -subj \"/C=US/ST=Oregon/L=Portland/0=IGNW/OU=Devops/CN=.\"\ntouch extfile.cnf\necho subjectAltName = IP:35.185.203.160 \u003e extfile.cnf\nopenssl x509 -req -days 3650 -in harbor.gcp.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extfile extfile.cnf -out harbor.gcp.crt\nsudo mkdir etc/ssl/certs\nsudo cp *.crt *.key /etc/ssl/certs\n\nwget https://storage.googleapis.com/harbor-releases/release-1.8.0/harbor-online-installer-v1.8.1.tgz\ntar xvzf harbor-online-installer-v1.8.1.tgz\ncp /tmp/harbor-config.yml ~/harbor/harbor.yml\nsudo ~/harbor/install.sh --with-notary --with-clair",
            "template": "sudo apt-get update -y\nsudo apt-get install -y chrony dnsmasq dnsutils jq\nsudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt-get update -y\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\nsudo docker run hello-world\n# install docker compose\nsudo curl -L --fail https://github.com/docker/compose/releases/download/1.24.0/run.sh -o /usr/local/bin/docker-compose\n# executable permissions for compose\nsudo chmod +x /usr/local/bin/docker-compose\n\nopenssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 3650 -out ca.crt -subj \"/C=US/ST=Oregon/L=Portland/0=IGNW/OU=Devops/CN=.\"\nopenssl req -newkey rsa:4096 -nodes -sha256 -keyout harbor.gcp.key -out harbor.gcp.csr -subj \"/C=US/ST=Oregon/L=Portland/0=IGNW/OU=Devops/CN=.\"\ntouch extfile.cnf\necho subjectAltName = IP:${host-ip} \u003e extfile.cnf\nopenssl x509 -req -days 3650 -in harbor.gcp.csr -CA ca.crt -CAkey ca.key -CAcreateserial -extfile extfile.cnf -out harbor.gcp.crt\nsudo mkdir etc/ssl/certs\nsudo cp *.crt *.key /etc/ssl/certs\n\nwget https://storage.googleapis.com/harbor-releases/release-1.8.0/harbor-online-installer-v1.8.1.tgz\ntar xvzf harbor-online-installer-v1.8.1.tgz\ncp /tmp/harbor-config.yml ~/harbor/harbor.yml\nsudo ~/harbor/install.sh --with-notary --with-clair",
            "vars": {
              "host-ip": "35.185.203.160"
            }
          },
          "depends_on": [
            "google_compute_instance.harbor"
          ]
        }
      ]
    },
    {
      "module": "module.harbor-instance",
      "mode": "data",
      "type": "template_file",
      "name": "install-config-ip",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "ff8dd50f85ca13553db53877e40ce3956bde45993c19c38b5bc2bae143ecb1f9",
            "rendered": "# Configuration file of Harbor\n\n# The IP address or hostname to access admin UI and registry service.\n# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.\nhostname: 35.185.203.160\n\n# http related config\nhttp:\n  # port for http, default is 80. If https enabled, this port will redirect to https port\n  port: 80\n\n# https related config\nhttps:\n#   # https port for harbor, default is 443\n  port: 443\n   # The path of cert and key files for nginx\n  certificate: /etc/ssl/certs/harbor.gcp.crt\n  private_key: /etc/ssl/certs/harbor.gcp.key\n\n# Uncomment external_url if you want to enable external proxy\n# And when it enabled the hostname will no longer used\n# external_url: https://reg.mydomain.com:8433\n\n# The initial password of Harbor admin\n# It only works in first time to install harbor\n# Remember Change the admin password from UI after launching Harbor.\nharbor_admin_password: Harbor12345\n\n# Harbor DB configuration\ndatabase:\n  # The password for the root user of Harbor DB. Change this before any production use.\n  password: root123\n\n# The default data volume\ndata_volume: /data\n\n# Harbor Storage settings by default is using /data dir on local filesystem\n# Uncomment storage_service setting If you want to using external storage\n# storage_service:\n#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore\n#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.\n#   ca_bundle:\n\n#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss\n\n#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/\n#   filesystem:\n#     maxthreads: 100\n#   # set disable to true when you want to disable registry redirect\n#   redirect:\n#     disabled: false\n\n# Clair configuration\nclair:\n  # The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.\n  updaters_interval: 12\n\n  # Config http proxy for Clair, e.g. http://my.proxy.com:3128\n  # Clair doesn't need to connect to harbor internal components via http proxy.\n  http_proxy:\n  https_proxy:\n  no_proxy: 127.0.0.1,localhost,core,registry\n\njobservice:\n  # Maximum number of job workers in job service\n  max_job_workers: 10\n\nchart:\n  # Change the value of absolute_url to enabled can enable absolute url in chart\n  absolute_url: disabled\n\n# Log configurations\nlog:\n  # options are debug, info, warning, error, fatal\n  level: info\n  # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.\n  rotate_count: 50\n  # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.\n  # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G\n  # are all valid.\n  rotate_size: 200M\n  # The directory on your host that store log\n  location: /var/log/harbor\n\n#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!\n_version: 1.8.0\n\n# Uncomment external_database if using external database.\n# external_database:\n\n#   harbor:\n#     host: harbor_db_host\n#     port: harbor_db_port\n#     db_name: harbor_db_name\n#     username: harbor_db_username\n#     password: harbor_db_password\n#     ssl_mode: disable\n#   clair:\n#     host: clair_db_host\n#     port: clair_db_port\n#     db_name: clair_db_name\n#     username: clair_db_username\n#     password: clair_db_password\n#     ssl_mode: disable\n#   notary_signer:\n#     host: notary_signer_db_host\n#     port: notary_signer_db_port\n#     db_name: notary_signer_db_name\n#     username: notary_signer_db_username\n#     password: notary_signer_db_password\n#     ssl_mode: disable\n#   notary_server:\n#     host: notary_server_db_host\n#     port: notary_server_db_port\n#     db_name: notary_server_db_name\n#     username: notary_server_db_username\n#     password: notary_server_db_password\n#     ssl_mode: disable\n\n# Uncomment external_redis if using external Redis server\n# external_redis:\n#   host: redis\n#   port: 6379\n#   password:\n#   # db_index 0 is for core, it's unchangeable\n#   registry_db_index: 1\n#   jobservice_db_index: 2\n#   chartmuseum_db_index: 3\n\n# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.\n# uaa:\n#   ca_file: /path/to/ca\n",
            "template": "# Configuration file of Harbor\n\n# The IP address or hostname to access admin UI and registry service.\n# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.\nhostname: ${host-ip}\n\n# http related config\nhttp:\n  # port for http, default is 80. If https enabled, this port will redirect to https port\n  port: 80\n\n# https related config\nhttps:\n#   # https port for harbor, default is 443\n  port: 443\n   # The path of cert and key files for nginx\n  certificate: /etc/ssl/certs/harbor.gcp.crt\n  private_key: /etc/ssl/certs/harbor.gcp.key\n\n# Uncomment external_url if you want to enable external proxy\n# And when it enabled the hostname will no longer used\n# external_url: https://reg.mydomain.com:8433\n\n# The initial password of Harbor admin\n# It only works in first time to install harbor\n# Remember Change the admin password from UI after launching Harbor.\nharbor_admin_password: Harbor12345\n\n# Harbor DB configuration\ndatabase:\n  # The password for the root user of Harbor DB. Change this before any production use.\n  password: root123\n\n# The default data volume\ndata_volume: /data\n\n# Harbor Storage settings by default is using /data dir on local filesystem\n# Uncomment storage_service setting If you want to using external storage\n# storage_service:\n#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore\n#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.\n#   ca_bundle:\n\n#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss\n\n#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/\n#   filesystem:\n#     maxthreads: 100\n#   # set disable to true when you want to disable registry redirect\n#   redirect:\n#     disabled: false\n\n# Clair configuration\nclair:\n  # The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.\n  updaters_interval: 12\n\n  # Config http proxy for Clair, e.g. http://my.proxy.com:3128\n  # Clair doesn't need to connect to harbor internal components via http proxy.\n  http_proxy:\n  https_proxy:\n  no_proxy: 127.0.0.1,localhost,core,registry\n\njobservice:\n  # Maximum number of job workers in job service\n  max_job_workers: 10\n\nchart:\n  # Change the value of absolute_url to enabled can enable absolute url in chart\n  absolute_url: disabled\n\n# Log configurations\nlog:\n  # options are debug, info, warning, error, fatal\n  level: info\n  # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.\n  rotate_count: 50\n  # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.\n  # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G\n  # are all valid.\n  rotate_size: 200M\n  # The directory on your host that store log\n  location: /var/log/harbor\n\n#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!\n_version: 1.8.0\n\n# Uncomment external_database if using external database.\n# external_database:\n\n#   harbor:\n#     host: harbor_db_host\n#     port: harbor_db_port\n#     db_name: harbor_db_name\n#     username: harbor_db_username\n#     password: harbor_db_password\n#     ssl_mode: disable\n#   clair:\n#     host: clair_db_host\n#     port: clair_db_port\n#     db_name: clair_db_name\n#     username: clair_db_username\n#     password: clair_db_password\n#     ssl_mode: disable\n#   notary_signer:\n#     host: notary_signer_db_host\n#     port: notary_signer_db_port\n#     db_name: notary_signer_db_name\n#     username: notary_signer_db_username\n#     password: notary_signer_db_password\n#     ssl_mode: disable\n#   notary_server:\n#     host: notary_server_db_host\n#     port: notary_server_db_port\n#     db_name: notary_server_db_name\n#     username: notary_server_db_username\n#     password: notary_server_db_password\n#     ssl_mode: disable\n\n# Uncomment external_redis if using external Redis server\n# external_redis:\n#   host: redis\n#   port: 6379\n#   password:\n#   # db_index 0 is for core, it's unchangeable\n#   registry_db_index: 1\n#   jobservice_db_index: 2\n#   chartmuseum_db_index: 3\n\n# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.\n# uaa:\n#   ca_file: /path/to/ca\n",
            "vars": {
              "host-ip": "35.185.203.160"
            }
          },
          "depends_on": [
            "google_compute_instance.harbor"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "default",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2019-07-15T13:37:52.829-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "id": "harbor-ubuntu-vm-firewall",
            "name": "harbor-ubuntu-vm-firewall",
            "network": "https://www.googleapis.com/compute/v1/projects/terraform-gcp-harbor/global/networks/terraform-gcp-harbor",
            "priority": 1000,
            "project": "terraform-gcp-harbor",
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-gcp-harbor/global/firewalls/harbor-ubuntu-vm-firewall",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.harbor-instance",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "harbor",
      "each": "list",
      "provider": "provider.google",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": true,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20190617",
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "source": "https://www.googleapis.com/compute/v1/projects/terraform-gcp-harbor/zones/us-west1-a/disks/harbor-ubuntu-vm-harbor-0"
              }
            ],
            "can_ip_forward": false,
            "cpu_platform": "Intel Broadwell",
            "deletion_protection": false,
            "description": null,
            "disk": [],
            "guest_accelerator": [],
            "hostname": "",
            "id": "harbor-ubuntu-vm-harbor-0",
            "instance_id": "6567639871266052814",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n1-standard-4",
            "metadata": {
              "ssh-keys": "alexsnow:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDG2/TxVUQpcaqhrgTTsQZ3k7UQdBx46wIC7XLTkEE7JOVByXffOTqRotU5gvCy4643Lh1TG5ZtUZHtB5y621xOuzinbqHZN6QkNSk/FFOl+3mVvZaJlKjyUeO6xiBgPz7A3pXdw1O4cw8B0b20TpAWeTeXHZ3scRR2BqFQ9Pn0r9IYME5iTnEvEIGmES5/Og53UUM9IvYTiSDVQKtolojrYfJCRbK8TNxB0dJlEZVIyYd87YhMLVYv2/GECHCzEKcSW16vcRWNP54CyGt2YrkdNnqU50LDZWsUv9uVGT0CccGKfmu+ArcxzkGkTHi517KnjddImqEuJD5+cJiGFZRj alexsnow@Administrators-MacBook-Pro.local\n"
            },
            "metadata_fingerprint": "2jqQ8KZN8Fg=",
            "metadata_startup_script": "",
            "min_cpu_platform": "",
            "name": "harbor-ubuntu-vm-harbor-0",
            "network_interface": [
              {
                "access_config": [
                  {
                    "assigned_nat_ip": "",
                    "nat_ip": "35.185.203.160",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "address": "",
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/terraform-gcp-harbor/global/networks/terraform-gcp-harbor",
                "network_ip": "10.0.0.40",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/terraform-gcp-harbor/regions/us-west1/subnetworks/harbor-repo-0",
                "subnetwork_project": "terraform-gcp-harbor"
              }
            ],
            "project": "terraform-gcp-harbor",
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-gcp-harbor/zones/us-west1-a/instances/harbor-ubuntu-vm-harbor-0",
            "service_account": [],
            "shielded_instance_config": [],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "us-west1-a"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9"
        }
      ]
    },
    {
      "module": "module.harbor-instance",
      "mode": "managed",
      "type": "null_resource",
      "name": "install-harbor",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "6121033841279292208",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.install-command-ip",
            "data.template_file.install-config-ip",
            "google_compute_instance.harbor"
          ]
        }
      ]
    }
  ]
}
